@page "/identity/account/register"

@using MediatR
@using EastSeat.ResourceIdea.Application.Features.ApplicationUser.Commands.CreateApplicationUser
@inject ResourceIdeaAuthenticationStateProvider ResourceIdeaAuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IMediator IMediator

<div class="card col-6">
    <div class="card-header">
        <h3>Register new user</h3>
    </div>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="@RegisterUserAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label>First name</label>
                <InputText id="firstName" class="form-control" @bind-Value="model.FirstName" />
                <ValidationMessage For="@(() => model.FirstName)" />
            </div>

            <div class="form-group mb-3">
                <label>Last name</label>
                <InputText id="lastName" class="form-control" @bind-Value="model.LastName" />
                <ValidationMessage For="@(() => model.LastName)" />
            </div>

            <div class="form-group mb-3">
                <label>Email</label>
                <InputText id="email" class="form-control" @bind-Value="model.Email" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>

            <div class="form-group mb-3">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>

            <button type="submit" class="btn btn-primary">Register user</button>
        </EditForm>
    </div>
</div>

@code {
    private UserRegistrationRequest model = new();

    private async Task RegisterUserAsync()
    {
        CreateApplicationUserCommand command = new()
        {
            FirstName = model.FirstName,
            LastName = model.LastName,
            Email = model.Email,
            Password = model.Password,
            SubscriptionId = new Guid("0373ba5e-b03c-4883-a30e-f4a30fe6b53d")
        };
        var response = await IMediator.Send(command);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/");
        }
    }

}
