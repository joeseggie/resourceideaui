// <auto-generated />
using System;
using EastSeat.ResourceIdea.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EastSeat.ResourceIdea.Persistence.Migrations
{
    [DbContext(typeof(ResourceIdeaDbContext))]
    [Migration("20230821134900_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EngagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EngagementId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Assignment", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JobPositionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Engagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Engagement", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.JobPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("JobPosition", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Subscription", b =>
                {
                    b.Property<Guid?>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastRenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.AssetAssignment", b =>
                {
                    b.HasBaseType("EastSeat.ResourceIdea.Domain.Entities.Assignment");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("AssetId");

                    b.ToTable("AssetAssignment", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.EmployeeAssignment", b =>
                {
                    b.HasBaseType("EastSeat.ResourceIdea.Domain.Entities.Assignment");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAssignment", (string)null);
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Asset", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("Assets")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Engagement", "Engagement")
                        .WithMany("Assignments")
                        .HasForeignKey("EngagementId");

                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("Assignments")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Engagement");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Client", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("Clients")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Employee", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId");

                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("Employees")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("JobPosition");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Engagement", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Client", "Client")
                        .WithMany("Engagements")
                        .HasForeignKey("ClientId");

                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("Engagements")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Client");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.JobPosition", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Subscription", "Subscription")
                        .WithMany("JobPositions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.AssetAssignment", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Asset", "Asset")
                        .WithMany("Assignments")
                        .HasForeignKey("AssetId");

                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Assignment", null)
                        .WithOne()
                        .HasForeignKey("EastSeat.ResourceIdea.Domain.Entities.AssetAssignment", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.EmployeeAssignment", b =>
                {
                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Employee", "Employee")
                        .WithMany("Assignments")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("EastSeat.ResourceIdea.Domain.Entities.Assignment", null)
                        .WithOne()
                        .HasForeignKey("EastSeat.ResourceIdea.Domain.Entities.EmployeeAssignment", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Asset", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Client", b =>
                {
                    b.Navigation("Engagements");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Engagement", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EastSeat.ResourceIdea.Domain.Entities.Subscription", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Assignments");

                    b.Navigation("Clients");

                    b.Navigation("Employees");

                    b.Navigation("Engagements");

                    b.Navigation("JobPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
