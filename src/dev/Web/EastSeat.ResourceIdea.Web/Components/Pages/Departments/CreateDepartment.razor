@page "/departments/new"
@using EastSeat.ResourceIdea.Domain.Types

@layout AdminLayout

@inject IMediator Mediator
@inject NavigationManager NavigationManager

<ResourceIdeaPageTitle Title="Add new department" />

<div class="card text-bg-light mt-1">
    <div class="card-body">
        <h5 class="card-title">Add new department</h5>
    </div>
</div>

<NavLink class="btn btn-secondary btn-sm mt-2 mb-2" href="/departments">Back</NavLink>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @errorMessage
        <button type="button" class="btn-close" @onclick="@(() => errorMessage = null)" aria-label="Close"></button>
    </div>
}

<EditForm Model="@command" OnValidSubmit="HandleValidSubmit" FormName="CreateDepartment">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <div class="row mb-1">
            <div class="col-md-6">
                <label for="Name">Department name</label>
                <InputText id="Name" class="form-control" @bind-Value="command.Name" />
                <ValidationMessage For="@(() => command.Name)" />
            </div>
        </div>
    </div>
    
    <button type="submit" class="btn btn-primary btn-sm">Create</button>

</EditForm>

@code {
    private CreateDepartmentCommand command = new();
    private string? errorMessage;

    private async Task HandleValidSubmit()
    {
        var result = await Mediator.Send(command);
        if (result != null && result.IsSuccess)
        {
            NavigationManager.NavigateTo("/departments");
        }
        else
        {
            errorMessage = "Failed to create department. Please try again.";
        }
    }
}
